<?php

class Image
{
	public static $validMimes=array("image/jpg","image/jpeg","image/gif","image/png");

	public static function createThumbNail($imgPath,$max=500,$maxwidth=830)
	{
		$imageInfo=  getimagesize($imgPath);
		$mime=$imageInfo["mime"];
		switch ($mime) {
			case "image/gif":
				$iimg=  imagecreatefromgif($imgPath);
				break;
			case "image/jpeg":
				$iimg= imagecreatefromjpeg($imgPath);
				break;
			case "image/jpg":
				$iimg= imagecreatefromjpeg($imgPath);
				break;
			case "image/png":
				$iimg= imagecreatefrompng($imgPath);
				break;
			default:
				return false;
				break;
		}
		$rwidth=imagesx($iimg);
		$rheight=imagesy($iimg);
		/**
		 * prayog
		 */
		$maxheight=$max;
		if ($rheight>$maxheight)
		{
			$mh=$maxheight;
			$mw=  floor($mh*$rwidth/$rheight);
			if ($mw>$maxwidth)
			{
				$mmw=$maxwidth;
				$mmh=floor($mmw*$mh/$mw);
				$width=$mmw;
				$height=$mmh;
			}
			else{
				$width=$mw;
				$height=$mh;
			}
		}
		else{
			$mw=$maxwidth;
			$mh=  floor($mw*$rheight/$rwidth);
			if ($mh>$maxheight)
			{
				$mmh=$maxheight;
				$mmw=floor($mmh*$mw/$mh);
				$height=$mmh;
				$width=$mmw;
			}
			else{
				$width=$mw;
				$height=$mh;
			}
		}
		/**
		 * Over by here!!!
		 */
		/*
		if ($rwidth>$rheight){
			if ($rwidth>=$max)
			{
				$width=$max;
				$height=floor(($width*$rheight)/$rwidth);
			}
			else
			{
				$width=$rwidth;
				$height=$height;
			}
		}
		else{
			if ($rheight>=$max)
			{
				$height=$max;
				$width=floor(($height*$rwidth)/$rheight);
			}
			else
			{
				$width=$rwidth;
				$height=$rheight;
			}
		}
		*/
		$oimg=  imagecreatetruecolor($width, $height);
		$success=  imagecopyresampled($oimg, $iimg, 0, 0, 0, 0, $width, $height, $rwidth, $rheight);
		if ($success)
			return $oimg;
		else
			return false;
	}

	public static function createSquareThumbNail($imgPath,$output_width=350)
	{
		$imageInfo=  getimagesize($imgPath);
		$mime=$imageInfo["mime"];
		switch ($mime) {
			case "image/gif":
				$iimg=  imagecreatefromgif($imgPath);
				break;
			case "image/jpeg":
				$iimg= imagecreatefromjpeg($imgPath);
				break;
			case "image/jpg":
				$iimg= imagecreatefromjpeg($imgPath);
				break;
			case "image/png":
				$iimg= imagecreatefrompng($imgPath);
				break;
			default:
				return false;
				break;
		}
		$width=imagesx($iimg);
		$height=imagesy($iimg);
		//echo "width  :  $width<br>height  :  $height<br>";
		//$srcX,$srcY,$srcW,$srcH;
		if ($width>$height){
			$srcY=0;
			$srcH=$height;
			$diff=$width-$height;	
			$srcX=floor($diff/2);
			$srcW=$height;
		}
		else{
			$srcX=0;
			$srcW=$width;
			$diff=$height-$width;
			$srcY=0;
			$srcH=$width;
		}
		if ($width<=$output_width && $height<=$output_width){
			if ($width>$height)
				$output_width=$height;
			else
				$output_width=$width;
		}
		//echo "srcX  :  $srcX<br>srcW  :  $srcW<br>srcY  :  $srcY<br>srcH  :  $srcH<br>";
		$oimg=  imagecreatetruecolor($output_width, $output_width);
		$success=imagecopyresampled($oimg, $iimg, 0, 0, $srcX, $srcY, $output_width, $output_width, $srcW, $srcH);
		if ($success)
			return $oimg;
		else
			return false;
	}
	public static function getValidExtensions()
	{
		return array('gif', 'png', 'jpeg', 'jpg');
	}

	/**
	 * Checks if the image specified is supported by our current application.
	 * @param type $imgPath valid image path
	 * @return boolean true if supported, and false if not supported.
	 */
	public static function isValidImage($imgPath)
	{
		$stats=  getimagesize($imgPath);
		$mime=$stats["mime"];
		$res=array_search($mime, self::$validMimes);
		if ($res===FALSE)
			return false;
		else
			return true;
	}
	/**
	 * 
	 * @param type $img image to flush generated by imageCreate function
	 * @param type $outputPath path to save the image.
	 * @param type $type type of image you would like to flush to.
	 * @throws CException
	 */
	public static function flushImage($img,$outputPath=null,$type="jpeg")
	{
		switch ($type)
		{
			case "jpg":
				imagejpeg($img,$outputPath);
				break;
			case "jpeg":
				imagejpeg($img,$outputPath);
				break;
			case "png":
				imagepng($img,$outputPath);
				break;
			case "gif":
				imagegif($img, $outputPath);
				break;
			case "default":
				throw new CException("$type filetype is not supported currently!!!");
		}
	}
}